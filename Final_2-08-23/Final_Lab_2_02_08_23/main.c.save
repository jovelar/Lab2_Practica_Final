#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int idSucursal;
    char nombreSucursal[25];
    char nombreProducto[25];
    char deporte[25];
    int stockProducto;
}stRegistro;

typedef struct
{
    stRegistro registro;
    struct Nodo2 *ante;
    struct Nodo2 *sig;
}Nodo2;

typedef struct
{
    struct Nodo2 *inicio;
    struct Nodo2 *fin;
}Fila;

Fila *inicFila(Fila *fila);
Fila *nuevaFila();

Fila *insertarAlFinal(Fila *fila,Nodo2 *nuevo);

Nodo2 *inicNodo2();
Fila *pasarAFila(char nombreArchivo[]);

Nodo2 *nuevoNodo2(int idSucursal,char nombreSucursal[],char nombreProducto[],char deporte[],int stockproducto)
{
    Nodo2 *nuevo=(Nodo2*)malloc(sizeof(Nodo2));
    nuevo->registro.idSucursal=idSucursal;
    strcpy(nuevo->registro.nombreSucursal,nombreSucursal);
    strcpy(nuevo->registro.nombreProducto,nombreProducto);
    strcpy(nuevo->registro.deporte,deporte);
    nuevo->registro.stockProducto=stockproducto;
    nuevo->ante=NULL;
    nuevo->sig=NULL;

    return nuevo;
}

Fila *insertarAlFinal(Fila *fila,Nodo2 *nuevo)
{
    if(fila->inicio==NULL)
    {
        fila->inicio=nuevo;
        fila->fin=nuevo;
    }
    else
    {
        Nodo2 *aux=fila->inicio;
        while(aux->sig!=NULL)
        {
            aux=aux->sig;
        }
        aux->sig=nuevo;
        fila->fin=nuevo;
    }
    return fila;
}

Nodo2 *inicNodo2()
{
    return NULL;
}

int main()
{
    Fila *fila;
    inicFila(fila);
    int opcion=0;
    while(opcion!=27)
    {
        opcion=menu();
        switch(opcion)
        {
            case 27:
            printf("Saliendo!");
            break;

            case 49:
                fila=pasarAFila("archivoRegistrosIndumentaria.bin");
                printf("\nSe paso el archivo a la fila!\n");
                break;

            case 50:
                mostrarFila(&fila);
                break;

            case 51:
                break;

            default:
                printf("\nOpcion Invalida\n");
                break;
        }
    }

    return 0;
}

int menu()
{
    int opcion;
    printf("\n1-Pasar registros a Fila\n");
    printf("\n2-Mostrar Fila\n");
    printf("\n\nESC- SALIR: ");
    opcion=getch();
    return opcion;
}

Fila *nuevaFila(Fila *nuevo)
{
    //Fila *nuevo=(Fila*)malloc(sizeof(Fila));
    nuevo->inicio=NULL;
    nuevo->fin=NULL;
    return nuevo;
}

Fila *inicFila(Fila *fila)
{
    fila.
    fila->inicio=NULL;
    fila->fin=NULL;
    return fila;
}

Fila *pasarAFila(char nombreArchivo[])
{
    Fila *nuevaFila;
    inicFila(nuevaFila);
    FILE *archivo=fopen(nombreArchivo,"rb");
    if(archivo)
    {
        stRegistro buffer;
        while(fread(&archivo,sizeof(stRegistro),1,archivo))
        {
            Nodo2 *nuevo=nuevoNodo2(buffer.idSucursal,buffer.nombreSucursal,buffer.nombreProducto,buffer.deporte,buffer.stockProducto);
            nuevaFila=insertarAlFinal(nuevaFila,nuevo);
        }

    }
    else
    {
        printf("\nError\n");
    }
    return nuevaFila;
}

void mostrarFila(Fila *fila)
{
    if(fila!=NULL)
    {
        Nodo2 *aux=fila->inicio;
        while(aux!=NULL)
        {
            printf("\n%i|%s|%s|%s|%i\n",aux->registro.idSucursal,aux->registro.nombreProducto,aux->registro.nombreSucursal,aux->registro.deporte,aux->registro.stockProducto);
            aux=aux->sig;
        }
    }
    else
    {
        printf("\nLa fila esta vacia!\n");
    }
}
